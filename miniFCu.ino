#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <ESP8266WiFi.h>

Adafruit_SSD1306 display(128, 64, &Wire, -1);


//About
bool isConnected = false;
String ssid = "";
String password = "";
int encreaseValue = 1;

//Important
long lastMillis;
int cursor = 0;

//Encoder
int CLK = 2;
int DT = 0;
int BTN = 16;
bool encoderIsValue = false; // False -> Cursor | True -> value
int encoderValue = 0;
void IRAM_ATTR rotaryEncoderISR(){
  if(millis() - lastMillis > 70){
    if(digitalRead(DT != 0)){

      switch (encoderIsValue) {
      case false: 
        cursor--; 
        break;
      case true:
        encoderValue = encoderValue - encreaseValue;
      }    

    } else {

      switch (encoderIsValue) {
      case false: 
        cursor++; 
        break;
      case true:
        encoderValue = encoderValue + encreaseValue;
      } 
    }
    
    lastMillis = millis();
  }
}

// Draws
const unsigned char bgBigIcon_36_36 [] PROGMEM = {
  0x3f, 0xff, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 
  0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 
  0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 
  0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 
  0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 
  0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 
  0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 
  0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 
  0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 
  0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x3f, 
  0xff, 0xff, 0xff, 0xc0
};
const unsigned char bgSmallIcon_28_28 [] PROGMEM = {
	0x3f, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xc0
};
const unsigned char icon_speaker_device_19_16 [] PROGMEM = {
	0x07, 0xfc, 0x00, 0x08, 0xe2, 0x00, 0x09, 0x12, 0x00, 0x09, 0xf2, 0x00, 0x09, 0x12, 0x00, 0x08, 
	0xe2, 0x00, 0x28, 0x02, 0x80, 0x48, 0xe2, 0x40, 0x89, 0x12, 0x20, 0xaa, 0xea, 0xa0, 0x8a, 0xaa, 
	0x20, 0x4a, 0xea, 0x40, 0x29, 0x12, 0x80, 0x08, 0xe2, 0x00, 0x08, 0x02, 0x00, 0x0f, 0xfe, 0x00
};
const unsigned char PROGMEM icon_plane_16_16 [] = {
  0x00,0x07,0x70,0x09,0x8e,0x11,0xc1,0xa2,0x30,0x44,0x0c,0x08,
  0x03,0x10,0x01,0x08,0x02,0xc8,0x05,0x44,0x7a,0x24,0x8c,0x24,
  0x64,0x12,0x14,0x12,0x14,0x0a,0x08,0x0c
};
const unsigned char icon_volume_20_16 [] PROGMEM = {
	0x01, 0xc1, 0x00, 0x02, 0x40, 0x80, 0x04, 0x44, 0x40, 0x08, 0x42, 0x20, 0xf0, 0x51, 0x20, 0x80, 
	0x49, 0x10, 0x80, 0x44, 0x90, 0x80, 0x44, 0x90, 0x80, 0x44, 0x90, 0x80, 0x49, 0x10, 0xf0, 0x51, 
	0x20, 0x08, 0x42, 0x20, 0x04, 0x44, 0x40, 0x02, 0x40, 0x80, 0x01, 0xc1, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM icon_reset_11_16[] = {0x00,0x00,0x00,0x00,0x00,0x00,0x19,0xe0,0x21,0xc0,0x41,0xc0,0x81,0x20,0x80,0x20,0x80,0x20,0x80,0x20,0x80,0x20,0x40,0x40,0x20,0x80,0x1f,0x00,0x00,0x00,0x00,0x00};
const unsigned char PROGMEM icon_left_arrow_3_5 [] = {0x20,0x60,0xe0,0x60,0x20};
const unsigned char PROGMEM icon_right_arrow_3_5 [] = {0x80,0xc0,0xe0,0xc0,0x80};
const unsigned char PROGMEM icon_down_arrow_5_3 [] = {0xf8,0x70,0x20};
const unsigned char PROGMEM icon_up_arrow_5_3 [] = {0x20,0x70,0xf8};



void setup() {
  Serial.begin(115200);
  WiFi.mode(WIFI_STA);

  //Inicia Display
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)){
    Serial.println("SSD1306 allocation failed");
    for(;;); // Don't proceed, loop forever
  }  

  //Configura encoder
  attachInterrupt(digitalPinToInterrupt(CLK), rotaryEncoderISR, FALLING); 
  pinMode(CLK, INPUT);
  pinMode(DT, INPUT);
  pinMode(BTN, INPUT);

  //TEMP
  display.clearDisplay();
  display.setTextColor(WHITE);
  display.setTextSize(1);
  centerText("Splash Screen", 28);
  display.display();
  delay(2000);
  display.clearDisplay();
}

void loop() {

  while(!isConnected){
    isConnected = screenChangeWifi();
  }
  //screenMainMenu();
  //delay(10000);
}
